%проверка кода на гит
clear;
close all;
clc;

U1 = 4;
U2 = 6;
U3 = 8;
U4 = 10; 
T1 = 2;
T2 = 5;
Fd = 5;
T = 1 / Fd;
b = [0.03 -0.001 0.04 -0.001 0.02]; % коэфы фильтра 
a = [1 -2.7 3.2 -1.9 0.5]; % коэфы фильтра учли а0 = 1
% значения подобраны так, чтобы на графиках было хоть что то адекватное 
% видел, что часто b от 0.1 до 0.001 а a в районе единицы и не многим более


%% 1 Старое условие 

t = 0:T:T2;
t1 = 0:T:T1;
t2 = T1+T:T:T2;

x1 = (U2-U1)/(T1-0)*t1 + U1; 
x2 = (U4-U3)/(T2-T1)*(t2-T1) + U3;
x = [x1 x2];

figure;
hold on;
plot(t, x, 'r-');
stem(t, x, 'b--');
xlabel('t, ms');
ylabel('u(t),V');
grid on;  % добавим линию сетки 

%% 2-3 Пропускание сигнала через прямой дискретный фильтр

t = 0:T:(T2*2+T); % для видимости затухающих ПП, возникающие после завершения сигнала - добав нулевые 
               % отсчёты которых больше в два раза

x0 = [x, zeros(1, length(x))]; % теперь у нас в векторе ещё столько же нулей

y = filter(b, a, x0); %  обработка сигнала дискретным фильтром 

figure;
hold on;
stem(t, y, 'b--')     % выходной сигнал дискретного фильтра 8.25 макс знач по модулю
title('the signal after the discrete direct filter');
xlabel('t, ms');
ylabel('u(t),V');
grid on;

yMaxPr = max(abs(y)); % макс выходного abs - модуль
xMaxPr = max(abs(x)); % макс входного
x_y_max = max(yMaxPr, xMaxPr); % макс из них 

%% Пункт 4 каноническая форма реализации дискретного фильтра

y2 = filter(1, a, x0); % в формуле вместо b стоит единица

figure; 
hold on;
stem(t, y2, 'r-');
title('the signal after the discrete canonical filter');
xlabel('t, ms');
ylabel('u(t),V');
grid on;

y2MaxCan = max(abs(y2)); % макс знач канонического  103.3

%% Пункт 5 транспонированная форма реализации дискретного фильтра

states = [];  % заготовка матрицы внутренних состояний
s =[];           % текущее состояние фильтра 
for k =1:length(x0)            
    % обработка одного отсчёта  заданием и сохранением внутренного
    % состояния фильтра 
    [y_tr(k), s] = filter (b, a, x0(k), s); % s возвращает итоговое внут состояние после
        % обработки сигнала x0(k), s - нач внут состояние 
    % добавление нового столбца к матрице состояний 
    states = [states s];
end

% мысли по поводу работы функции filter для работы с внутренним состоянией
% фильтра: получается, что на выходе матрица 4x52 - тк самих отсчётов 52
% штуки мы насчитали в переменной x0. а 4 строки потому что s у нас 1х4??
% пока не понятно..... PS ну да, столбцы разное время отсчёта 
% "разные строки соответствуют разным элементам фильтра" ответ получен -
% осталось его осознать...
% неа, пока не осознаю 

figure;

plot(states');  % транспонируем чтобы получить графики всех внут сигналов 
A_max = max(max(abs(states'))); % два макса тк матрица со строками 14.36

title('Internal filter signal');
xlabel('counts');   % отсчёты 
ylabel('u(t),V');
grid on;

%% Пункт 6 графики характеристик фильтра FVTOOL

fvtool(b,a,"magnitude");
fvtool(b,a,"phase");
fvtool(b,a,"grpdelay");
fvtool(b,a, "impulse");
fvtool(b,a,"polezero");
% это, получается, опции анализа - задаёшь ключевое слово и выводится нужный
% график, при этом можно даже не дописать слово и он выведет то, что ты
% имел в виду? - получается да 


%% Пункт 7 аналитическая форма импульсной характеристики

[r, p, k] = residuez(b, a); % r вектор вычетов, p - вектор полюсов, k - коэф целой части ФП 

rAm=abs(r);   % модуль
rPh=angle(r); % фаза
pAm=abs(p);   % модуль
pPh=angle(p); % фаза
k
rAm
rPh
pAm
pPh

% аналитическая формула для импульсной характеристики в файле в папке гит












